{
    "name": "ApiTemplate",
    "version": 12,
    "ns": "App",
    "dataVersion": "1",
    "description": "",
    "script": "",
    "validationScript": "function run(data) {\n    const integerManager = data.project.getPreset('FieldTypeInteger').propertyManager\n    const numericManager = data.project.getPreset('FieldTypeNumeric').propertyManager\n    const ruleManager = data.project.getPreset('ValidationRule').propertyManager\n    const nameSet = new Set()\n    ruleManager.list.forEach(rule => {\n        if (rule.tag === 'WWW') {\n            nameSet.add(rule.name)\n        }\n    })\n\n    const addField = function(field, name) {\n        const found = field.ruleManager.find(name)\n        if (found) {\n            return found\n        }\n        const rule = field.ruleManager.make(name)\n        field.ruleManager.add(rule)\n        return rule\n    }\n\n    data.entity.fieldManager.list.forEach(field => {\n        if (field.included === false) {\n            return\n        }\n        if (field.isIncrement) {\n            return\n        }\n\n        addField(field, 'required')\n\n        if (field.type === 'boolean') {\n            addField(field, 'boolean')\n            return\n        }\n        if (integerManager.find(field.type)) {\n            addField(field, 'integer')\n            return\n        }\n        if (numericManager.find(field.type)) {\n            addField(field, 'numeric')\n            return\n        }\n        if (field.type === 'char' || field.type === 'string') {\n            if (field.length) {\n                const max = addField(field, 'max')\n                max.value = field.length\n            }\n        }\n\n        if (nameSet.has(field.name)) {\n            addField(field, field.name)\n        }\n    })\n}\n",
    "entityManager": {
        "list": [
            {
                "name": "User",
                "description": "",
                "script": "",
                "tableName": "users",
                "fieldManager": {
                    "list": [
                        {
                            "name": "id",
                            "allowNull": false,
                            "cast": "",
                            "collation": "",
                            "comment": "",
                            "fillable": false,
                            "hidden": false,
                            "included": false,
                            "length": "",
                            "useCurrent": false,
                            "unsigned": false,
                            "value": "",
                            "ruleManager": {
                                "list": []
                            },
                            "seed": {
                                "unique": false,
                                "type": "raw",
                                "value": "",
                                "parameter": ""
                            },
                            "type": "uuid"
                        },
                        {
                            "name": "name",
                            "allowNull": false,
                            "cast": "",
                            "collation": "",
                            "comment": "User name",
                            "fillable": true,
                            "hidden": false,
                            "included": true,
                            "length": "",
                            "useCurrent": false,
                            "unsigned": false,
                            "value": "",
                            "ruleManager": {
                                "list": [
                                    {
                                        "name": "string",
                                        "value": ""
                                    },
                                    {
                                        "name": "required",
                                        "value": ""
                                    }
                                ]
                            },
                            "seed": {
                                "unique": false,
                                "type": "raw",
                                "value": "$this->faker->name()",
                                "parameter": ""
                            },
                            "type": "string"
                        },
                        {
                            "name": "email",
                            "allowNull": false,
                            "cast": "",
                            "collation": "",
                            "comment": "User email address",
                            "fillable": true,
                            "hidden": false,
                            "included": true,
                            "length": "",
                            "useCurrent": false,
                            "unsigned": false,
                            "value": "",
                            "ruleManager": {
                                "list": [
                                    {
                                        "name": "required",
                                        "value": ""
                                    },
                                    {
                                        "name": "string",
                                        "value": ""
                                    },
                                    {
                                        "name": "email",
                                        "value": ""
                                    }
                                ]
                            },
                            "seed": {
                                "unique": false,
                                "type": "raw",
                                "value": "$this->faker->unique()->safeEmail()",
                                "parameter": ""
                            },
                            "type": "string"
                        },
                        {
                            "name": "email_verified_at",
                            "allowNull": true,
                            "cast": "",
                            "collation": "",
                            "comment": "",
                            "fillable": true,
                            "hidden": true,
                            "included": false,
                            "length": "",
                            "useCurrent": false,
                            "unsigned": false,
                            "value": "",
                            "ruleManager": {
                                "list": []
                            },
                            "seed": {
                                "unique": false,
                                "type": "raw",
                                "value": "now()",
                                "parameter": ""
                            },
                            "type": "timestamp"
                        },
                        {
                            "name": "password",
                            "allowNull": false,
                            "cast": "",
                            "collation": "",
                            "comment": "",
                            "fillable": true,
                            "hidden": true,
                            "included": true,
                            "length": "",
                            "useCurrent": false,
                            "unsigned": false,
                            "value": "",
                            "ruleManager": {
                                "list": [
                                    {
                                        "name": "required",
                                        "value": ""
                                    },
                                    {
                                        "name": "string",
                                        "value": ""
                                    }
                                ]
                            },
                            "seed": {
                                "unique": false,
                                "type": "raw",
                                "value": "'$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi'",
                                "parameter": ""
                            },
                            "type": "string"
                        }
                    ]
                },
                "indexManager": {
                    "list": [
                        {
                            "name": 0.6841166958141504,
                            "fieldManager": {
                                "list": [
                                    {
                                        "name": "id"
                                    }
                                ]
                            },
                            "type": "primary"
                        }
                    ]
                },
                "dataManager": {
                    "list": []
                },
                "relationManager": {
                    "list": []
                }
            }
        ]
    },
    "layerManager": {
        "list": [
            {
                "name": "ControllerAPI",
                "original": false,
                "single": false,
                "description": "",
                "classPattern": "${entity.name}Controller",
                "filePattern": "${entity.name}Controller.php",
                "nsPattern": "${project.ns}\\Http\\Controllers",
                "pathPattern": "app/Http/Controllers",
                "script": "function run(data) {\n    data.model = data.project.getLayer('Model')\n    data.requestStore = data.project.getLayer('StoreRequest')\n    data.requestUpdate = data.project.getLayer('UpdateRequest')\n    data.repository = data.project.getLayer('Repository')\n    data.resource = data.project.getLayer('Resource')\n}\n",
                "template": "<?php\n\nnamespace {{ layer.getNameSpace(project, entity) }};\n\nuse {{ model.getFullName(project, entity) }};\nuse {{ requestStore.getFullName(project, entity) }};\nuse {{ requestUpdate.getFullName(project, entity) }};\nuse {{ repository.getFullName(project, entity) }};\nuse {{ resource.getFullName(project, entity) }};\nuse \\Illuminate\\Http\\JsonResponse;\n\nclass {{ layer.getClassName(entity) }} extends Controller \n{\n    /** \n     * @OA\\Get(\n     *     path=\"/api/v{{ project.dataVersion }}/{{ entity.tableName }}\",\n     *     summary=\"Display the list of {{ model.getClassName(entity) | lower}} items\",\n     *     @OA\\Response(response=404, description=\"Not found\"),\n     *     @OA\\Response(response=200, description=\"Ok\", @OA\\JsonContent(\n     *           @OA\\Property(property=\"data\", type=\"array\", @OA\\Items(), ref=\"#/components/schemas/{{ model.getClassName(entity)}}Resource\")\n     *     ))\n     * )\n     */\n    public function index({{repository.getClassName(entity)}} $repository)\n    {\n        return {{ resource.getClassName(entity) }}::collection($repository->paginateAll());\n    }\n\n    /**\n     * @OA\\Post(\n     *     path=\"/api/v{{ project.dataVersion }}/{{ entity.tableName }}\",\n     *     summary=\"Store new {{ model.getClassName(entity) | lower}}\",\n     *     @OA\\RequestBody(@OA\\JsonContent(@OA\\Schema(ref=\"#/components/schemas/{{ model.getClassName(entity)}}StoreRequest\"))),\n     *     @OA\\Response(response=422, description=\"Validation error\"),\n     *     @OA\\Response(response=201, description=\"Created\", @OA\\JsonContent(@OA\\Schema(ref=\"#/components/schemas/{{ model.getClassName(entity)}}Resource\")))\n     * )\n     */\n    public function store({{ requestStore.getClassName(entity) }} $request, {{repository.getClassName(entity)}} $repository): JsonResponse\n    {\n        ${{ model.getClassName(entity) | lower}} = $repository->create($request->validated());\n\n        return response()->json(new {{ resource.getClassName(entity)}}(${{ model.getClassName(entity) | lower}}), 201);\n    }\n\n    /**\n     * @OA\\Get(\n     *     path=\"/api/v{{ project.dataVersion }}/{{ entity.tableName }}/{{'{'}}{{ model.getClassName(entity) | lower}}}\",\n     *     summary=\"Display the {{ model.getClassName(entity) | lower}}\",\n     *     @OA\\Parameter(description=\"{{ model.getClassName(entity)}} id\", in=\"path\", name=\"{{ model.getClassName(entity) | lower}}\", required=true, @OA\\Schema(type=\"string\"), @OA\\Examples(example=\"uuid\", value=\"0006faf6-7a61-426c-9034-579f2cfcfa83\", summary=\"An UUID value.\")),\n     *     @OA\\Response(response=404, description=\"Not found\"),\n     *     @OA\\Response(response=200, description=\"Ok\", @OA\\JsonContent(@OA\\Schema(ref=\"#/components/schemas/{{ model.getClassName(entity)}}Resource\")))\n     * )\n     */\n    public function show({{ model.getClassName(entity) }} ${{ model.getClassName(entity) | lower}}): JsonResponse\n    {\n        return response()->json(new {{ resource.getClassName(entity)}}(${{ model.getClassName(entity) | lower}}));\n    }\n\n    /**\n     * @OA\\Put(\n     *     path=\"/api/v{{ project.dataVersion }}/{{ entity.tableName }}/{{'{'}}{{ model.getClassName(entity) | lower}}}\",\n     *     summary=\"Update the {{ model.getClassName(entity) | lower}}\",\n     *     @OA\\Parameter(description=\"{{ model.getClassName(entity)}} id\", in=\"path\", name=\"{{ model.getClassName(entity) | lower}}\", required=true, @OA\\Schema(type=\"string\"), @OA\\Examples(example=\"uuid\", value=\"0006faf6-7a61-426c-9034-579f2cfcfa83\", summary=\"An UUID value.\")),\n     *     @OA\\RequestBody(@OA\\JsonContent(@OA\\Schema(ref=\"#/components/schemas/{{ model.getClassName(entity)}}UpdateRequest\"))),\n     *     @OA\\Response(response=422, description=\"Validation error\"),\n     *     @OA\\Response(response=404, description=\"Not found\"),\n     *     @OA\\Response(response=200, description=\"Updated\", @OA\\JsonContent(@OA\\Schema(ref=\"#/components/schemas/{{ model.getClassName(entity)}}Resource\")))\n     * )\n     */\n    public function update({{ model.getClassName(entity) }} ${{ model.getClassName(entity) | lower}}, {{ requestUpdate.getClassName(entity) }} $request, {{repository.getClassName(entity)}} $repository): JsonResponse\n    {\n        ${{ model.getClassName(entity) | lower}} = $repository->update(${{ model.getClassName(entity) | lower}}, $request->validated());\n\n        return response()->json(new {{ resource.getClassName(entity)}}(${{ model.getClassName(entity) | lower}}));\n    }\n\n    /**\n     * @OA\\Delete(\n     *     path=\"/api/v{{ project.dataVersion }}/{{ entity.tableName }}/{{'{'}}{{ model.getClassName(entity) | lower}}}\",\n     *     summary=\"Remove the {{ model.getClassName(entity) | lower}}\",\n     *     @OA\\Parameter(description=\"{{ model.getClassName(entity)}} id\", in=\"path\", name=\"{{ model.getClassName(entity) | lower}}\", required=true, @OA\\Schema(type=\"string\"), @OA\\Examples(example=\"uuid\", value=\"0006faf6-7a61-426c-9034-579f2cfcfa83\", summary=\"An UUID value.\")),\n     *     @OA\\Response(response=404, description=\"Not found\"),\n     *     @OA\\Response(response=410, description=\"Resource already deleted\"),\n     *     @OA\\Response(response=201, description=\"Deleted\")\n     * )\n     */\n    public function destroy({{ model.getClassName(entity) }} ${{ model.getClassName(entity) | lower}}): JsonResponse\n    {\n        $count = ${{ model.getClassName(entity) | lower}}->delete();\n        if ($count) {\n            return response()->json(new stdClass, 201);\n        }\n        return response()->json(new stdClass, 410);\n    }\n}",
                "dataManager": {
                    "list": []
                }
            },
            {
                "name": "DBFactory",
                "original": false,
                "single": false,
                "description": "",
                "classPattern": "${entity.name}Factory",
                "filePattern": "${entity.name}Factory.php",
                "nsPattern": "${project.ns}\\Database\\Factories",
                "pathPattern": "database/factories",
                "script": "function run(data) {\n    data.model = data.project.getLayer('Model')\n\n    data.seedText = seed => {\n        const list = ['$this->faker']\n        if (seed.unique) {\n            list.push('unique()')\n        }\n\n        if (seed.type === 'property') {\n            list.push(seed.value)\n            return list.join('->')\n        }\n\n        if (seed.type === 'method') {\n            list.push(`${seed.value}(${seed.parameter})`)\n            return list.join('->')\n        }\n\n        return seed.value\n    }\n}\n",
                "template": "<?php\n\nnamespace {{ layer.getNameSpace(project, entity) }};\n\nuse {{ model.getFullName(project, entity) }};\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass {{ layer.getClassName(entity) }} extends Factory\n{\n    protected $model = {{ model.getClassName(entity)}}::class;\n\n    public function definition()\n    {\n        return [ {% for field in entity.fieldManager.list %}{% if field.seed.value !== '' %}\n            '{{ field.name }}' => {{ seedText(field.seed) }},{% endif %}{% endfor %}\n        ];\n    }\n}",
                "dataManager": {
                    "list": []
                }
            },
            {
                "name": "Migration",
                "original": true,
                "single": false,
                "description": "",
                "classPattern": "Create${entity.name}sTable",
                "filePattern": "0000_00_00_000000_create_${entity.tableName}_table.php",
                "nsPattern": "",
                "pathPattern": "database/migrations",
                "script": "function run(data) {\n    data.fieldText = function(field) {\n        const list = ['$table']\n\n        if (field.length) {\n            list.push(`${field.type}('${field.name}', ${field.length})`)\n        } else {\n            list.push(`${field.type}('${field.name}')`)\n        }\n\n        if (field.collation) {\n            list.push(`collation(${field.collation})`)\n        }\n\n        if (field.comment) {\n            list.push(`comment('${field.comment}')`)\n        }\n\n        if (field.value) {\n            list.push(`default(${field.value})`)\n        }\n\n        if (field.allowNull) {\n            list.push('nullable()')\n        }\n\n        if (field.useCurrent) {\n            list.push('useCurrent()')\n        }\n\n        if (field.unsigned) {\n            list.push('unsigned()')\n        }\n\n        return list.join('->')\n    }\n\n    data.indexText = function(index) {\n        const text = index.fieldManager.list.map(field => field.name).join(\"', '\")\n        return `$table->${index.type}(['${text}'])`\n    }\n}\n",
                "template": "<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass {{ layer.getClassName(entity) }} extends Migration\n{\n    public function up()\n    {\n        Schema::create('{{ entity.tableName }}', function (Blueprint $table) {{'{'}} {% for field in entity.fieldManager.list %}\n            {{ fieldText(field) }}; {% endfor %}{% for field in entity.indexManager.list %}\n            {{ indexText(field) }}; {% endfor %}\n            $table->timestamps();\n        });\n    }\n\n    public function down()\n    {\n        Schema::dropIfExists('{{ entity.tableName }}');\n    }\n}\n",
                "dataManager": {
                    "list": []
                }
            },
            {
                "name": "Model",
                "original": true,
                "single": false,
                "description": "",
                "classPattern": "${entity.name}",
                "filePattern": "${entity.name}.php",
                "nsPattern": "${project.ns}\\Models",
                "pathPattern": "app/Models",
                "script": "function run(data) {\n    const castManager = data.project.getPreset('CastPHP').propertyManager\n    const typeManager = data.project.getPreset('FieldType').propertyManager\n    data.phptype = field => {\n        if (field.cast) {\n            const found = castManager.find(field.cast)\n            if (found) {\n                return found.value\n            }\n        }\n\n        if (['created_at', 'updated_at', 'deleted_at'].includes(field.name)) {\n            return '\\\\Illuminate\\\\Support\\\\Carbon'\n        }\n\n        const found = typeManager.find(field.type)\n        if (found) {\n            return found.tag\n        }\n\n        return 'mixed'\n    }\n\n    data.factory= data.project.getLayer('DBFactory')\n}\n",
                "template": "<?php\n\nnamespace {{ layer.getNameSpace(project, entity) }};\n{% if entity.name === 'User' %}\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nuse Laravel\\Sanctum\\HasApiTokens;\nuse Illuminate\\Notifications\\Notifiable;{% else %}\nuse Illuminate\\Database\\Eloquent\\Model;{% endif %}\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Dyrynda\\Database\\Support\\GeneratesUuid;\nuse {{ factory.getFullName(project, entity) }};\n\n/**\n * Class {{ layer.getClassName(entity) }}\n * @package {{ layer.getNameSpace(project, entity) }}\n * {% for field in entity.fieldManager.list %} \n * @property {{ phptype(field) }} ${{ field.name }}{% endfor %}\n */\nclass {{ layer.getClassName(entity) }} extends {% if entity.name === 'User' %}Authenticatable{% else %}Model{% endif %}\n{\n    use HasFactory, GeneratesUuid{% if entity.name === 'User' %}, HasApiTokens, Notifiable{% endif %};\n\n    protected $table = '{{ entity.tableName }}';\n\n    protected $primaryKey = '{{ entity.primaryKey }}';\n\n    public $incrementing = {{ entity.fieldManager.hasIncrement }};\n\n    public $timestamps = {{ entity.hasTimeStamp}};\n\n    protected $keyType = 'string';\n\n    protected static function newFactory(): {{factory.getClassName(entity)}}\n    {\n        return {{factory.getClassName(entity)}}::new();\n    }\n\n    public function uuidColumn(): string\n    {\n        return 'id';\n    }\n\n    protected $fillable = [ {% for field in entity.fieldManager.list | selectattr('fillable') %}\n        '{{ field.name }}', {% endfor %}\n    ];\n\n    protected $hidden = [ {% for field in entity.fieldManager.list | selectattr('hidden') %}\n        '{{ field.name }}', {% endfor %}\n    ];\n\n    protected $casts = [ {% for field in entity.fieldManager.list | selectattr('cast') %}\n        '{{ field.name }}' => '{{ field.cast }}', {% endfor %}\n    ];\n{% for relation in entity.relationManager.list %}\n    public function {{ relation.name }}()\n    {\n        return $this->{{ relation.type }}({{ relation.parameter }});\n    }{% endfor %}\n}\n",
                "dataManager": {
                    "list": []
                }
            },
            {
                "name": "Repository",
                "original": false,
                "single": false,
                "description": "",
                "classPattern": "${entity.name}Repository",
                "filePattern": "${entity.name}Repository.php",
                "nsPattern": "${project.ns}\\Repositories",
                "pathPattern": "app/Repositories",
                "script": "function run(data) {\n    data.model = data.project.getLayer('Model')\n}\n",
                "template": "<?php\n\nnamespace {{ layer.getNameSpace(project, entity) }};\n\nuse {{ model.getFullName(project, entity) }};\nuse Illuminate\\Database\\Eloquent\\Model;\n\n/**\n * Class {{ layer.getClassName(entity) }}\n * @package {{ layer.getNameSpace(project, entity) }}\n * @extends Repository<{{ model.getClassName(entity) }}>\n *\n * @method {{ model.getClassName(entity) }}|null find($id)\n * @method {{ model.getClassName(entity) }} findOrFail($id)\n */\nclass {{ layer.getClassName(entity) }} extends Repository\n{\n    /**\n     * @return User\n     */\n    public function getModel(): Model\n    {\n        return new {{ model.getClassName(entity) }};\n    }\n}\n",
                "dataManager": {
                    "list": []
                }
            },
            {
                "name": "StoreRequest",
                "original": false,
                "single": false,
                "description": "",
                "classPattern": "Store${entity.name}Request",
                "filePattern": "Store${entity.name}Request.php",
                "nsPattern": "${project.ns}\\Http\\Requests",
                "pathPattern": "app/Http/Requests",
                "script": "function run(data) {\n    data.model = data.project.getLayer('Model')\n\n    data.ruleTextStore = field => { \n        if (field.ruleManager.list.length) {\n            const list = field.ruleManager.list.map(rule => {\n                return rule.value ? `${rule.name}:${rule.value}` : rule.name\n            })\n            return `['${list.join(\"', '\")}']`\n        }\n        return '[]'\n    }\n}\n",
                "template": "<?php\n\nnamespace {{ layer.getNameSpace(project, entity) }};\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\n/**\n * @OA\\Schema(\n *     schema=\"{{ model.getClassName(entity)}}StoreRequest\",\n *     title=\"Request for create {{ model.getClassName(entity)}} entity\", {% for field in entity.fieldManager.list | selectattr('included') %}\n *     @OA\\Property(property=\"{{ field.name }}\", type=\"{{field.type}}\", description=\"{{ field.comment }}\", example=\"\"),{% endfor %}\n * )\n */\nclass {{ layer.getClassName(entity) }} extends FormRequest\n{\n    public function rules()\n    {\n        return [ {% for field in entity.fieldManager.list | selectattr('included') %}\n                '{{ field.name }}' => {{ ruleTextStore(field) }},{% endfor %}\n        ];\n    }\n}\n",
                "dataManager": {
                    "list": []
                }
            },
            {
                "name": "Resource",
                "original": false,
                "single": false,
                "description": "",
                "classPattern": "${entity.name}Resource",
                "filePattern": "${entity.name}Resource.php",
                "nsPattern": "${project.ns}\\Http\\Resources",
                "pathPattern": "app/Http/Resources",
                "script": "function run(data) {\n    data.model = data.project.getLayer('Model')\n}\n",
                "template": "<?php\n\nnamespace {{ layer.getNameSpace(project, entity) }};\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\n/**\n * @OA\\Schema(\n *     schema=\"{{ model.getClassName(entity)}}Resource\",\n *     title=\"Response for {{ model.getClassName(entity)}} entity\", {% for field in entity.fieldManager.list %}{% if field.hidden === false %}\n *     @OA\\Property(property=\"{{ field.name }}\", type=\"{{field.type}}\", description=\"{{ item.comment }}\", example=\"\"),{% endif %}{% endfor %}\n * )\n */\nclass {{ layer.getClassName(entity) }} extends JsonResource\n{\n    public function toArray($request)\n    {\n        return [ {% for field in entity.fieldManager.list %}{% if field.hidden === false %}\n            '{{ field.name }}' => $this->{{ field.name }},{% endif %}{% endfor %}\n        ];\n    }\n}\n",
                "dataManager": {
                    "list": []
                }
            },
            {
                "name": "TestFeature",
                "original": false,
                "single": false,
                "description": "",
                "classPattern": "${entity.name}Test",
                "filePattern": "${entity.name}Test.php",
                "nsPattern": "${project.ns}\\Tests\\Feature",
                "pathPattern": "tests/Feature",
                "script": "function run(data) {\n    data.model = data.project.getLayer('Model')\n    data.factory= data.project.getLayer('DBFactory')\n}",
                "template": "<?php\n\nnamespace {{ layer.getNameSpace(project, entity) }};\n\nuse Illuminate\\Foundation\\Testing\\LazilyRefreshDatabase;\nuse {{project.ns}}\\Tests\\TestCase;\nuse {{project.ns}}\\Models\\User;\n\nclass {{ layer.getClassName(entity) }} extends TestCase\n{\n    use LazilyRefreshDatabase;\n\n    /** @test */\n    public function it_response_in_correct_structure_after_create_{{ model.getClassName(entity) | lower}}()\n    {\n        $this->actingAs(User::factory()->create());\n       {% if entity.name === 'User' %}\n        ${{ model.getClassName(entity) | lower}} = {{ model.getClassName(entity) }}::factory()->make()->makeVisible(['password'])->toArray();{% else %}\n        ${{ model.getClassName(entity) | lower}} ={{ model.getClassName(entity) }}::factory()->make()->toArray();{% endif %}\n\n        $this->json('POST', 'api/v{{ project.dataVersion }}/{{ entity.tableName }}', ${{ model.getClassName(entity) | lower}})\n            ->assertStatus(201)\n            ->assertJsonStructure([{% for field in entity.fieldManager.list %}{% if field.hidden === false %}\n                '{{ field.name }}',{% endif %}{% endfor %} \n            ]);\n\n        $this->assertDatabaseHas('{{ entity.tableName }}', [\n            'name' => ${{ model.getClassName(entity) | lower}}['name'],\n            'email' => ${{ model.getClassName(entity) | lower}}['email'],\n        ]);\n    }\n\n    /** @test */\n    public function it_response_in_correct_structure_in_{{ model.getClassName(entity) | lower}}_list()\n    {\n        $this->actingAs(User::factory()->create());\n\n       {{ model.getClassName(entity) }}::factory()->make()->toArray();\n\n        $this->json('GET', 'api/v{{ project.dataVersion }}/{{ entity.tableName }}')\n            ->assertStatus(200)\n            ->assertJsonStructure([\n                'data' => [\n                       [{% for field in entity.fieldManager.list %}{% if field.hidden === false %}\n                              '{{ field.name }}',{% endif %}{% endfor %} \n                       ]\n                ],\n                'links',\n                'meta'\n            ]);\n    }\n    \n    /** @test */\n    public function it_response_in_correct_structure_after_update_{{ model.getClassName(entity) | lower}}()\n    {\n        $this->actingAs(User::factory()->create());\n\n        ${{ model.getClassName(entity) | lower}} = {{ model.getClassName(entity) }}::factory()->create();\n\n        $data = {{ model.getClassName(entity) }}::factory()->make()->toArray();\n\n        $this->json('PUT', 'api/v{{ project.dataVersion }}/{{ entity.tableName }}/'.${{ model.getClassName(entity) | lower}}->id, $data)\n            ->assertStatus(200)\n            ->assertJsonStructure([{% for field in entity.fieldManager.list %}{% if field.hidden === false %}\n                '{{ field.name }}',{% endif %}{% endfor %} \n            ]);\n\n        $this->assertDatabaseHas('{{ entity.tableName }}', [\n            'id' => ${{ model.getClassName(entity) | lower}}->id,\n            'name' => $data['name'],\n            'email' => $data['email'],\n        ]);\n    }\n    \n    /** @test */\n    public function it_response_in_correct_structure_in_show_endpoint_{{ model.getClassName(entity) | lower}}()\n    {\n        $this->actingAs(User::factory()->create());\n\n        ${{ model.getClassName(entity) | lower}} = {{ model.getClassName(entity) }}::factory()->create();\n\n        $this->json('GET', 'api/v{{ project.dataVersion }}/{{ entity.tableName }}/'.${{ model.getClassName(entity) | lower}}->id)\n            ->assertStatus(200)\n            ->assertJsonStructure([{% for field in entity.fieldManager.list %}{% if field.hidden === false %}\n                '{{ field.name }}',{% endif %}{% endfor %} \n            ]);\n    }\n    \n    /** @test */\n    public function it_response_in_correct_status_after_delete_{{ model.getClassName(entity) | lower}}()\n    {\n        $this->actingAs(User::factory()->create());\n\n        ${{ model.getClassName(entity) | lower}} = {{ model.getClassName(entity) }}::factory()->create();\n\n        $this->json('DELETE', 'api/v{{ project.dataVersion }}/{{ entity.tableName }}/'.${{ model.getClassName(entity) | lower}}->id)\n            ->assertStatus(201);\n\n        $this->assertDatabaseMissing('{{ entity.tableName }}', [\n            'id' => ${{ model.getClassName(entity) | lower}}->id\n        ]);\n    }\n\n    /** @test */\n    public function it_response_in_correct_status_when_{{ model.getClassName(entity) | lower}}_is_not_found_to_delete()\n    {\n        $this->actingAs(User::factory()->create());\n\n        ${{ model.getClassName(entity) | lower}} = {{ model.getClassName(entity) }}::factory()->create();\n\n        $this->json('DELETE', 'api/v{{ project.dataVersion }}/{{ entity.tableName }}/'.${{ model.getClassName(entity) | lower}}->id.'1')\n            ->assertStatus(404);\n    }\n}",
                "dataManager": {
                    "list": []
                }
            },
            {
                "name": "route",
                "original": false,
                "single": false,
                "description": "",
                "classPattern": "",
                "filePattern": "",
                "nsPattern": "",
                "pathPattern": "",
                "script": "function run(data) {\n    data.model = data.project.getLayer('Model')\n    data.controller= data.project.getLayer('ControllerAPI')\n}",
                "template": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse {{ controller.getFullName(project, entity) }};\n\nRoute::group(['middleware' =>['auth:sanctum', 'bindings'], 'prefix' => 'api/v{{ project.dataVersion }}/{{ entity.tableName }}'], function() {\n    Route::get('/', [{{ controller.getClassName(entity)}}::class, 'index']);\n    Route::get('/{{'{'}}{{ model.getClassName(entity) | lower}}}', [{{ controller.getClassName(entity)}}::class, 'show']);\n    Route::post('/', [{{ controller.getClassName(entity)}}::class, 'store']);\n    Route::put('/{{'{'}}{{ model.getClassName(entity) | lower}}}', [{{ controller.getClassName(entity)}}::class, 'update']);\n    Route::delete('/{{'{'}}{{ model.getClassName(entity) | lower}}}', [{{ controller.getClassName(entity)}}::class, 'destroy']);\n});",
                "dataManager": {
                    "list": []
                }
            },
            {
                "name": "UpdateRequest",
                "original": false,
                "single": false,
                "description": "",
                "classPattern": "Update${entity.name}Request",
                "filePattern": "Update${entity.name}Request.php",
                "nsPattern": "${project.ns}\\Http\\Requests",
                "pathPattern": "app/Http/Requests",
                "script": "function run(data) {\n    data.model = data.project.getLayer('Model')\n    data.ruleTextUpdate = field => {\n        if (field.ruleManager.list.length) {\n            const list = field.ruleManager.list.map((rule, index) => {\n                if (rule.name== 'required') {\n                     return null\n                }\n                return rule.value ? `${rule.name}:${rule.value}` : rule.name\n            })\n            return `['${list.filter(x => !!x).join(\"', '\")}']`\n        }\n        return '[]'\n    }\n}\n",
                "template": "<?php\n\nnamespace {{ layer.getNameSpace(project, entity) }};\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\n/**\n * @OA\\Schema(\n *     schema=\"{{ model.getClassName(entity)}}UpdateRequest\",\n *     title=\"Request for update {{ model.getClassName(entity)}} entity\", {% for field in entity.fieldManager.list | selectattr('included') %}\n *     @OA\\Property(property=\"{{ field.name }}\", type=\"{{field.type}}\", description=\"{{ field.comment }}\", example=\"\"),{% endfor %}\n * )\n */\nclass {{ layer.getClassName(entity) }} extends FormRequest\n{\n    public function rules()\n    {\n        return [ {% for field in entity.fieldManager.list | selectattr('included') %}\n                '{{ field.name }}' => {{ ruleTextUpdate(field) }},{% endfor %}\n        ];\n    }\n}\n",
                "dataManager": {
                    "list": []
                }
            }
        ]
    },
    "presetManager": {
        "list": [
            {
                "name": "CastPHP",
                "original": true,
                "version": 1,
                "description": "for Cast in Model",
                "propertyManager": {
                    "list": [
                        {
                            "name": "array",
                            "data": {},
                            "tag": "",
                            "value": "array"
                        },
                        {
                            "name": "boolean",
                            "data": {},
                            "tag": "",
                            "value": "boolean"
                        },
                        {
                            "name": "collection",
                            "data": {},
                            "tag": "",
                            "value": "\\Illuminate\\Support\\Collection"
                        },
                        {
                            "name": "date",
                            "data": {},
                            "tag": "",
                            "value": "\\Illuminate\\Support\\Carbon"
                        },
                        {
                            "name": "datetime",
                            "data": {},
                            "tag": "",
                            "value": "\\Illuminate\\Support\\Carbon"
                        },
                        {
                            "name": "decimal:8",
                            "data": {},
                            "tag": "",
                            "value": "double"
                        },
                        {
                            "name": "double",
                            "data": {},
                            "tag": "",
                            "value": "double"
                        },
                        {
                            "name": "float",
                            "data": {},
                            "tag": "",
                            "value": "float"
                        },
                        {
                            "name": "integer",
                            "data": {},
                            "tag": "",
                            "value": "integer"
                        },
                        {
                            "name": "object",
                            "data": {},
                            "tag": "",
                            "value": "object"
                        },
                        {
                            "name": "string",
                            "data": {},
                            "tag": "",
                            "value": "string"
                        },
                        {
                            "name": "timestamp",
                            "data": {},
                            "tag": "",
                            "value": "integer"
                        }
                    ]
                }
            },
            {
                "name": "FakerMethod",
                "original": true,
                "version": 1,
                "description": "for Factory",
                "propertyManager": {
                    "list": [
                        {
                            "name": "amPm",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "asciify",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "biasedNumberBetween",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "boolean",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "bothify",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "creditCardNumber",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "date",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTime",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeAd",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeBetween",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeInInterval",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeThisCentury",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeThisDecade",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeThisMonth",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeThisYear",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dayOfMonth",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dayOfWeek",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "file",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "firstName",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "iban",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "image",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "imageUrl",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "iso8601",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "lexify",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "month",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "monthName",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "name",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "numberBetween",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "numerify",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "optional",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "paragraph",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "paragraphs",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "passthrough",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "password",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "randomElement",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "randomElements",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "randomFloat",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "randomHtml",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "randomKey",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "randomNumber",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "realText",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "regexify",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "sentence",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "sentences",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "shuffle",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "shuffleArray",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "shuffleString",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "slug",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "text",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "time",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "title",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "toLower",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "toUpper",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "unique",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "unixTime",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "valid",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "words",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "year",
                            "data": {},
                            "tag": "",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "FakerProperty",
                "original": true,
                "version": 1,
                "description": "for Factory",
                "propertyManager": {
                    "list": [
                        {
                            "name": "address",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "amPm",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "bankAccountNumber",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "boolean",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "buildingNumber",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "century",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "chrome",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "city",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "citySuffix",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "colorName",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "company",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "companyEmail",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "companySuffix",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "country",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "countryCode",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "countryISOAlpha3",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "creditCardDetails",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "creditCardExpirationDate",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "creditCardExpirationDateString",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "creditCardNumber",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "creditCardType",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "currencyCode",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTime",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeAD",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeThisCentury",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeThisDecade",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeThisMonth",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dateTimeThisYear",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dayOfMonth",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "dayOfWeek",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "domainName",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "domainWord",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "e164PhoneNumber",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "ean13",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "ean8",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "email",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "fileExtension",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "firefox",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "firstName",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "firstNameFemale",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "firstNameMale",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "freeEmail",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "freeEmailDomain",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "hexColor",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "internetExplorer",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "ipv4",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "ipv6",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "isbn10",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "isbn13",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "iso8601",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "jobTitle",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "languageCode",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "lastName",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "latitude",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "linuxPlatformToken",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "linuxProcessor",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "locale",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "localIpv4",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "longitude",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "macAddress",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "macPlatformToken",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "macProcessor",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "md5",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "mimeType",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "month",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "monthName",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "name",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "opera",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "paragraph",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "paragraphs",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "password",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "phoneNumber",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "postcode",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "randomAscii",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "randomDigit",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "randomDigitNotNull",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "randomLetter",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "rgbColor",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "rgbColorAsArray",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "rgbCssColor",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "safari",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "safeColorName",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "safeEmail",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "safeEmailDomain",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "safeHexColor",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "sentence",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "sentences",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "sha1",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "sha256",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "slug",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "streetAddress",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "streetName",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "streetSuffix",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "swiftBicNumber",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "text",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "timezone",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "title",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "titleFemale",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "titleMale",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "tld",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "unixTime",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "url",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "userAgent",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "userName",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "uuid",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "vat",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "windowsPlatformToken",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "word",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "words",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "year",
                            "data": {},
                            "tag": "",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "FieldName",
                "original": true,
                "version": 1,
                "description": "for Migration (tag is FieldType)",
                "propertyManager": {
                    "list": [
                        {
                            "name": "category_id",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "content",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "email",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "image",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "link",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "name",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "parent_id",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "password",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "phone",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "sort",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "status",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "text",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "title",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "type",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "url",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "FieldSpecial",
                "original": true,
                "version": 1,
                "description": "for Migration (tag is FieldType)",
                "propertyManager": {
                    "list": [
                        {
                            "name": "id",
                            "data": {
                                "allowNull": false,
                                "cast": "",
                                "comment": "",
                                "fillable": false,
                                "hidden": false,
                                "included": false,
                                "length": "",
                                "unsigned": false,
                                "value": "",
                                "type": "increments"
                            },
                            "tag": "increments",
                            "value": ""
                        },
                        {
                            "name": "user_id",
                            "data": {
                                "allowNull": false,
                                "cast": "",
                                "comment": "",
                                "fillable": false,
                                "hidden": false,
                                "included": false,
                                "length": "",
                                "unsigned": false,
                                "value": "",
                                "type": "integer"
                            },
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "created_at",
                            "data": {
                                "allowNull": true,
                                "cast": "",
                                "comment": "",
                                "fillable": false,
                                "hidden": false,
                                "included": false,
                                "length": "",
                                "unsigned": false,
                                "value": "",
                                "type": "timestamp"
                            },
                            "tag": "timestamp",
                            "value": ""
                        },
                        {
                            "name": "updated_at",
                            "data": {
                                "allowNull": true,
                                "cast": "",
                                "comment": "",
                                "fillable": false,
                                "hidden": false,
                                "included": false,
                                "length": "",
                                "unsigned": false,
                                "value": "",
                                "type": "timestamp"
                            },
                            "tag": "timestamp",
                            "value": ""
                        },
                        {
                            "name": "deleted_at",
                            "data": {
                                "allowNull": true,
                                "cast": "",
                                "comment": "",
                                "fillable": false,
                                "hidden": false,
                                "included": false,
                                "length": "",
                                "unsigned": false,
                                "value": "",
                                "type": "timestamp"
                            },
                            "tag": "timestamp",
                            "value": ""
                        },
                        {
                            "name": "decimal",
                            "data": {},
                            "tag": "decimal",
                            "value": ""
                        },
                        {
                            "name": "decimal 0",
                            "data": {},
                            "tag": "decimal",
                            "value": "0"
                        },
                        {
                            "name": "float",
                            "data": {},
                            "tag": "float",
                            "value": ""
                        },
                        {
                            "name": "float 0",
                            "data": {},
                            "tag": "float",
                            "value": "0"
                        },
                        {
                            "name": "integer",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "integer 0",
                            "data": {},
                            "tag": "integer",
                            "value": "0"
                        },
                        {
                            "name": "char",
                            "data": {},
                            "tag": "char",
                            "value": ""
                        },
                        {
                            "name": "char ''",
                            "data": {},
                            "tag": "char",
                            "value": "''"
                        },
                        {
                            "name": "string",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "string ''",
                            "data": {},
                            "tag": "string",
                            "value": "''"
                        },
                        {
                            "name": "text",
                            "data": {},
                            "tag": "text",
                            "value": ""
                        },
                        {
                            "name": "dateTime",
                            "data": {},
                            "tag": "dateTime",
                            "value": ""
                        },
                        {
                            "name": "timestamp",
                            "data": {},
                            "tag": "timestamp",
                            "value": ""
                        },
                        {
                            "name": "timestamp now",
                            "data": {
                                "useCurrent": true
                            },
                            "tag": "timestamp",
                            "value": ""
                        },
                        {
                            "name": "timestamps",
                            "data": {},
                            "tag": "timestamps",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "FieldType",
                "original": true,
                "version": 1,
                "description": "for Migration (tag is PHP type)",
                "propertyManager": {
                    "list": [
                        {
                            "name": "bigIncrements",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "bigInteger",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "binary",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "boolean",
                            "data": {},
                            "tag": "boolean",
                            "value": ""
                        },
                        {
                            "name": "char",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "date",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "dateTime",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "dateTimeTz",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "decimal",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "double",
                            "data": {},
                            "tag": "double",
                            "value": ""
                        },
                        {
                            "name": "enum",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "float",
                            "data": {},
                            "tag": "float",
                            "value": ""
                        },
                        {
                            "name": "geometry",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "geometryCollection",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "increments",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "integer",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "ipAddress",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "json",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "jsonb",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "lineString",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "longText",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "macAddress",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "mediumIncrements",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "mediumInteger",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "mediumText",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "morphs",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "uuidMorphs",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "multiLineString",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "multiPoint",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "multiPolygon",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "point",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "polygon",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "set",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "smallIncrements",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "smallInteger",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "string",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "text",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "time",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "timeTz",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "timestamp",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "timestampTz",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "tinyIncrements",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "tinyInteger",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "uuid",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "FieldTypeInteger",
                "original": true,
                "version": 1,
                "description": "for Field Validation",
                "propertyManager": {
                    "list": [
                        {
                            "name": "bigIncrements",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "increments",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "mediumIncrements",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "smallIncrements",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "tinyIncrements",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "bigInteger",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "integer",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "mediumInteger",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "smallInteger",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "tinyInteger",
                            "data": {},
                            "tag": "",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "FieldTypeNumeric",
                "original": true,
                "version": 1,
                "description": "for Field Validation",
                "propertyManager": {
                    "list": [
                        {
                            "name": "bigIncrements",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "increments",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "mediumIncrements",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "smallIncrements",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "tinyIncrements",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "bigInteger",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "integer",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "mediumInteger",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "smallInteger",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "tinyInteger",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "decimal",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "double",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "float",
                            "data": {},
                            "tag": "",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "FieldTypeMySQL",
                "original": true,
                "version": 1,
                "description": "MySQL type (tag is FieldType)",
                "propertyManager": {
                    "list": [
                        {
                            "name": "bigint",
                            "data": {},
                            "tag": "bigInteger",
                            "value": ""
                        },
                        {
                            "name": "binary",
                            "data": {},
                            "tag": "binary",
                            "value": ""
                        },
                        {
                            "name": "bit",
                            "data": {},
                            "tag": "boolean",
                            "value": ""
                        },
                        {
                            "name": "blob",
                            "data": {},
                            "tag": "binary",
                            "value": ""
                        },
                        {
                            "name": "char",
                            "data": {},
                            "tag": "char",
                            "value": ""
                        },
                        {
                            "name": "date",
                            "data": {},
                            "tag": "date",
                            "value": ""
                        },
                        {
                            "name": "datetime",
                            "data": {},
                            "tag": "dateTime",
                            "value": ""
                        },
                        {
                            "name": "decimal",
                            "data": {},
                            "tag": "decimal",
                            "value": ""
                        },
                        {
                            "name": "double",
                            "data": {},
                            "tag": "double",
                            "value": ""
                        },
                        {
                            "name": "enum",
                            "data": {},
                            "tag": "enum",
                            "value": ""
                        },
                        {
                            "name": "float",
                            "data": {},
                            "tag": "float",
                            "value": ""
                        },
                        {
                            "name": "geometry",
                            "data": {},
                            "tag": "geometry",
                            "value": ""
                        },
                        {
                            "name": "geometrycollection",
                            "data": {},
                            "tag": "geometryCollection",
                            "value": ""
                        },
                        {
                            "name": "int",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "integer",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "json",
                            "data": {},
                            "tag": "json",
                            "value": ""
                        },
                        {
                            "name": "linestring",
                            "data": {},
                            "tag": "lineString",
                            "value": ""
                        },
                        {
                            "name": "longblob",
                            "data": {},
                            "tag": "binary",
                            "value": ""
                        },
                        {
                            "name": "longtext",
                            "data": {},
                            "tag": "longText",
                            "value": ""
                        },
                        {
                            "name": "mediumblob",
                            "data": {},
                            "tag": "binary",
                            "value": ""
                        },
                        {
                            "name": "mediumint",
                            "data": {},
                            "tag": "mediumInteger",
                            "value": ""
                        },
                        {
                            "name": "mediumtext",
                            "data": {},
                            "tag": "mediumText",
                            "value": ""
                        },
                        {
                            "name": "multilinestring",
                            "data": {},
                            "tag": "multiLineString",
                            "value": ""
                        },
                        {
                            "name": "multipoint",
                            "data": {},
                            "tag": "multiPoint",
                            "value": ""
                        },
                        {
                            "name": "multipolygon",
                            "data": {},
                            "tag": "multiPolygon",
                            "value": ""
                        },
                        {
                            "name": "point",
                            "data": {},
                            "tag": "point",
                            "value": ""
                        },
                        {
                            "name": "polygon",
                            "data": {},
                            "tag": "polygon",
                            "value": ""
                        },
                        {
                            "name": "set",
                            "data": {},
                            "tag": "set",
                            "value": ""
                        },
                        {
                            "name": "smallint",
                            "data": {},
                            "tag": "smallInteger",
                            "value": ""
                        },
                        {
                            "name": "text",
                            "data": {},
                            "tag": "text",
                            "value": ""
                        },
                        {
                            "name": "time",
                            "data": {},
                            "tag": "time",
                            "value": ""
                        },
                        {
                            "name": "timestamp",
                            "data": {},
                            "tag": "timestamp",
                            "value": ""
                        },
                        {
                            "name": "tinyblob",
                            "data": {},
                            "tag": "binary",
                            "value": ""
                        },
                        {
                            "name": "tinyint",
                            "data": {},
                            "tag": "tinyInteger",
                            "value": ""
                        },
                        {
                            "name": "tinytext",
                            "data": {},
                            "tag": "text",
                            "value": ""
                        },
                        {
                            "name": "varbinary",
                            "data": {},
                            "tag": "binary",
                            "value": ""
                        },
                        {
                            "name": "varchar",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "timestamps",
                            "data": {},
                            "tag": "timestamps",
                            "value": ""
                        },
                        {
                            "name": "rememberToken",
                            "data": {},
                            "tag": "rememberToken",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "FieldTypePGSQL",
                "original": true,
                "version": 1,
                "description": "PostgreSQL type (tag is FieldType)",
                "propertyManager": {
                    "list": [
                        {
                            "name": "bigint",
                            "data": {},
                            "tag": "bigInteger",
                            "value": ""
                        },
                        {
                            "name": "bigserial",
                            "data": {},
                            "tag": "bigIncrements",
                            "value": ""
                        },
                        {
                            "name": "bit",
                            "data": {},
                            "tag": "binary",
                            "value": ""
                        },
                        {
                            "name": "bit varying",
                            "data": {},
                            "tag": "binary",
                            "value": ""
                        },
                        {
                            "name": "boolean",
                            "data": {},
                            "tag": "boolean",
                            "value": ""
                        },
                        {
                            "name": "box",
                            "data": {},
                            "tag": "lineString",
                            "value": ""
                        },
                        {
                            "name": "bytea",
                            "data": {},
                            "tag": "binary",
                            "value": ""
                        },
                        {
                            "name": "character",
                            "data": {},
                            "tag": "char",
                            "value": ""
                        },
                        {
                            "name": "character varying",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "cidr",
                            "data": {},
                            "tag": "ipAddress",
                            "value": ""
                        },
                        {
                            "name": "circle",
                            "data": {},
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "name": "date",
                            "data": {},
                            "tag": "date",
                            "value": ""
                        },
                        {
                            "name": "double precision",
                            "data": {},
                            "tag": "double",
                            "value": ""
                        },
                        {
                            "name": "inet",
                            "data": {},
                            "tag": "ipAddress",
                            "value": ""
                        },
                        {
                            "name": "integer",
                            "data": {},
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "name": "interval",
                            "data": {},
                            "tag": "dateTime",
                            "value": ""
                        },
                        {
                            "name": "json",
                            "data": {},
                            "tag": "json",
                            "value": ""
                        },
                        {
                            "name": "jsonb",
                            "data": {},
                            "tag": "jsonb",
                            "value": ""
                        },
                        {
                            "name": "line",
                            "data": {},
                            "tag": "lineString",
                            "value": ""
                        },
                        {
                            "name": "lseg",
                            "data": {},
                            "tag": "lineString",
                            "value": ""
                        },
                        {
                            "name": "macaddr",
                            "data": {},
                            "tag": "macAddress",
                            "value": ""
                        },
                        {
                            "name": "money",
                            "data": {},
                            "tag": "decimal",
                            "value": ""
                        },
                        {
                            "name": "numeric",
                            "data": {},
                            "tag": "decimal",
                            "value": ""
                        },
                        {
                            "name": "path",
                            "data": {},
                            "tag": "lineString",
                            "value": ""
                        },
                        {
                            "name": "pg_lsn",
                            "data": {},
                            "tag": "bigInteger",
                            "value": ""
                        },
                        {
                            "name": "point",
                            "data": {},
                            "tag": "point",
                            "value": ""
                        },
                        {
                            "name": "polygon",
                            "data": {},
                            "tag": "polygon",
                            "value": ""
                        },
                        {
                            "name": "real",
                            "data": {},
                            "tag": "float",
                            "value": ""
                        },
                        {
                            "name": "smallint",
                            "data": {},
                            "tag": "smallInteger",
                            "value": ""
                        },
                        {
                            "name": "smallserial",
                            "data": {},
                            "tag": "smallIncrements",
                            "value": ""
                        },
                        {
                            "name": "serial",
                            "data": {},
                            "tag": "increments",
                            "value": ""
                        },
                        {
                            "name": "text",
                            "data": {},
                            "tag": "text",
                            "value": ""
                        },
                        {
                            "name": "time without time zone",
                            "data": {},
                            "tag": "time",
                            "value": ""
                        },
                        {
                            "name": "time with time zone",
                            "data": {},
                            "tag": "timeTz",
                            "value": ""
                        },
                        {
                            "name": "timestamp without time zone",
                            "data": {},
                            "tag": "timestamp",
                            "value": ""
                        },
                        {
                            "name": "timestamp with time zone",
                            "data": {},
                            "tag": "timestampTz",
                            "value": ""
                        },
                        {
                            "name": "tsquery",
                            "data": {},
                            "tag": "text",
                            "value": ""
                        },
                        {
                            "name": "tsvector",
                            "data": {},
                            "tag": "text",
                            "value": ""
                        },
                        {
                            "name": "txid_snapshot",
                            "data": {},
                            "tag": "bigInteger",
                            "value": ""
                        },
                        {
                            "name": "uuid",
                            "data": {},
                            "tag": "uuid",
                            "value": ""
                        },
                        {
                            "name": "xml",
                            "data": {},
                            "tag": "longText",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "FieldTypeWithParameter",
                "original": true,
                "version": 1,
                "description": "for Migration",
                "propertyManager": {
                    "list": [
                        {
                            "name": "decimal",
                            "data": {},
                            "tag": "precision",
                            "value": ""
                        },
                        {
                            "name": "double",
                            "data": {},
                            "tag": "precision",
                            "value": ""
                        },
                        {
                            "name": "float",
                            "data": {},
                            "tag": "precision",
                            "value": ""
                        },
                        {
                            "name": "enum",
                            "data": {},
                            "tag": "array",
                            "value": ""
                        },
                        {
                            "name": "set",
                            "data": {},
                            "tag": "array",
                            "value": ""
                        },
                        {
                            "name": "dateTime",
                            "data": {},
                            "tag": "precision",
                            "value": ""
                        },
                        {
                            "name": "dateTimeTz",
                            "data": {},
                            "tag": "precision",
                            "value": ""
                        },
                        {
                            "name": "time",
                            "data": {},
                            "tag": "precision",
                            "value": ""
                        },
                        {
                            "name": "timeTz",
                            "data": {},
                            "tag": "precision",
                            "value": ""
                        },
                        {
                            "name": "timestamp",
                            "data": {},
                            "tag": "precision",
                            "value": ""
                        },
                        {
                            "name": "timestampTz",
                            "data": {},
                            "tag": "precision",
                            "value": ""
                        },
                        {
                            "name": "timestamps",
                            "data": {},
                            "tag": "precision",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "IncrementMySQL",
                "original": true,
                "version": 1,
                "description": "increments of MySQL schema",
                "propertyManager": {
                    "list": [
                        {
                            "name": "bigint",
                            "data": {},
                            "tag": "bigIncrements",
                            "value": ""
                        },
                        {
                            "name": "int",
                            "data": {},
                            "tag": "increments",
                            "value": ""
                        },
                        {
                            "name": "integer",
                            "data": {},
                            "tag": "increments",
                            "value": ""
                        },
                        {
                            "name": "mediumint",
                            "data": {},
                            "tag": "mediumIncrements",
                            "value": ""
                        },
                        {
                            "name": "smallint",
                            "data": {},
                            "tag": "smallIncrements",
                            "value": ""
                        },
                        {
                            "name": "tinyint",
                            "data": {},
                            "tag": "tinyIncrements",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "IncrementPGSQL",
                "original": true,
                "version": 1,
                "description": "increments of PostgreSQL schema",
                "propertyManager": {
                    "list": [
                        {
                            "name": "bigInteger",
                            "data": {},
                            "tag": "bigIncrements",
                            "value": ""
                        },
                        {
                            "name": "integer",
                            "data": {},
                            "tag": "increments",
                            "value": ""
                        },
                        {
                            "name": "mediumInteger",
                            "data": {},
                            "tag": "mediumIncrements",
                            "value": ""
                        },
                        {
                            "name": "smallInteger",
                            "data": {},
                            "tag": "smallIncrements",
                            "value": ""
                        },
                        {
                            "name": "tinyInteger",
                            "data": {},
                            "tag": "tinyIncrements",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "RegularExpression",
                "original": true,
                "version": 1,
                "description": "for Field Validation",
                "propertyManager": {
                    "list": [
                        {
                            "name": "A-Z",
                            "data": {},
                            "tag": "",
                            "value": "/^[A-Z]+$/"
                        },
                        {
                            "name": "a-z",
                            "data": {},
                            "tag": "",
                            "value": "/^[a-z]+$/"
                        },
                        {
                            "name": "0-9",
                            "data": {},
                            "tag": "",
                            "value": "/^\\d+$/"
                        },
                        {
                            "name": "A-Z a-z",
                            "data": {},
                            "tag": "",
                            "value": "/^[A-Za-z]+$/"
                        },
                        {
                            "name": "A-Z a-z 0-9",
                            "data": {},
                            "tag": "",
                            "value": "/^[A-Za-z0-9]+$/"
                        },
                        {
                            "name": "A-Z a-z 0-9 _",
                            "data": {},
                            "tag": "",
                            "value": "/^[A-Za-z0-9_]+$/"
                        }
                    ]
                }
            },
            {
                "name": "RelationType",
                "original": true,
                "version": 1,
                "description": "for Model Relation",
                "propertyManager": {
                    "list": [
                        {
                            "name": "hasOne",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "belongsTo",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "hasMany",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "belongsToMany",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "hasOneThrough",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "hasManyThrough",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "morphOne",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "morphMany",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "morphToMany",
                            "data": {},
                            "tag": "",
                            "value": ""
                        },
                        {
                            "name": "morphedByMany",
                            "data": {},
                            "tag": "",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "ValidationRule",
                "original": true,
                "version": 1,
                "description": "for Field Validation",
                "propertyManager": {
                    "list": [
                        {
                            "name": "accepted",
                            "data": {},
                            "tag": "WWW",
                            "value": ""
                        },
                        {
                            "name": "active_url",
                            "data": {},
                            "tag": "WWW",
                            "value": ""
                        },
                        {
                            "name": "after",
                            "data": {},
                            "tag": "Date",
                            "value": ""
                        },
                        {
                            "name": "after_or_equal",
                            "data": {},
                            "tag": "Date",
                            "value": ""
                        },
                        {
                            "name": "alpha",
                            "data": {},
                            "tag": "Content",
                            "value": ""
                        },
                        {
                            "name": "alpha_dash",
                            "data": {},
                            "tag": "Content",
                            "value": ""
                        },
                        {
                            "name": "alpha_num",
                            "data": {},
                            "tag": "Content",
                            "value": ""
                        },
                        {
                            "name": "array",
                            "data": {},
                            "tag": "Type",
                            "value": ""
                        },
                        {
                            "name": "bail",
                            "data": {},
                            "tag": "Other",
                            "value": ""
                        },
                        {
                            "name": "before",
                            "data": {},
                            "tag": "Date",
                            "value": ""
                        },
                        {
                            "name": "before_or_equal",
                            "data": {},
                            "tag": "Date",
                            "value": ""
                        },
                        {
                            "name": "between",
                            "data": {},
                            "tag": "Size",
                            "value": ""
                        },
                        {
                            "name": "boolean",
                            "data": {},
                            "tag": "Type",
                            "value": ""
                        },
                        {
                            "name": "confirmed",
                            "data": {},
                            "tag": "Field",
                            "value": ""
                        },
                        {
                            "name": "date",
                            "data": {},
                            "tag": "Date",
                            "value": ""
                        },
                        {
                            "name": "date_equals",
                            "data": {},
                            "tag": "Date",
                            "value": ""
                        },
                        {
                            "name": "date_format",
                            "data": {},
                            "tag": "Date",
                            "value": ""
                        },
                        {
                            "name": "different",
                            "data": {},
                            "tag": "Field",
                            "value": ""
                        },
                        {
                            "name": "digits",
                            "data": {},
                            "tag": "Size",
                            "value": ""
                        },
                        {
                            "name": "digits_between",
                            "data": {},
                            "tag": "Size",
                            "value": ""
                        },
                        {
                            "name": "dimensions",
                            "data": {},
                            "tag": "File",
                            "value": ""
                        },
                        {
                            "name": "distinct",
                            "data": {},
                            "tag": "Content",
                            "value": ""
                        },
                        {
                            "name": "email",
                            "data": {},
                            "tag": "WWW",
                            "value": ""
                        },
                        {
                            "name": "ends_with",
                            "data": {},
                            "tag": "Content",
                            "value": ""
                        },
                        {
                            "name": "exclude_if",
                            "data": {},
                            "tag": "Require",
                            "value": ""
                        },
                        {
                            "name": "exclude_unless",
                            "data": {},
                            "tag": "Require",
                            "value": ""
                        },
                        {
                            "name": "exists",
                            "data": {},
                            "tag": "Other",
                            "value": ""
                        },
                        {
                            "name": "file",
                            "data": {},
                            "tag": "File",
                            "value": ""
                        },
                        {
                            "name": "filled",
                            "data": {},
                            "tag": "Other",
                            "value": ""
                        },
                        {
                            "name": "gt",
                            "data": {},
                            "tag": "Field",
                            "value": ""
                        },
                        {
                            "name": "gte",
                            "data": {},
                            "tag": "Field",
                            "value": ""
                        },
                        {
                            "name": "image",
                            "data": {},
                            "tag": "File",
                            "value": ""
                        },
                        {
                            "name": "in",
                            "data": {},
                            "tag": "Content",
                            "value": ""
                        },
                        {
                            "name": "in_array",
                            "data": {},
                            "tag": "Field",
                            "value": ""
                        },
                        {
                            "name": "integer",
                            "data": {},
                            "tag": "Type",
                            "value": ""
                        },
                        {
                            "name": "ip",
                            "data": {},
                            "tag": "WWW",
                            "value": ""
                        },
                        {
                            "name": "ipv4",
                            "data": {},
                            "tag": "WWW",
                            "value": ""
                        },
                        {
                            "name": "ipv6",
                            "data": {},
                            "tag": "WWW",
                            "value": ""
                        },
                        {
                            "name": "json",
                            "data": {},
                            "tag": "WWW",
                            "value": ""
                        },
                        {
                            "name": "lt",
                            "data": {},
                            "tag": "Field",
                            "value": ""
                        },
                        {
                            "name": "lte",
                            "data": {},
                            "tag": "Field",
                            "value": ""
                        },
                        {
                            "name": "max",
                            "data": {},
                            "tag": "Size",
                            "value": ""
                        },
                        {
                            "name": "mimetypes",
                            "data": {},
                            "tag": "File",
                            "value": ""
                        },
                        {
                            "name": "mimes",
                            "data": {},
                            "tag": "File",
                            "value": ""
                        },
                        {
                            "name": "min",
                            "data": {},
                            "tag": "Size",
                            "value": ""
                        },
                        {
                            "name": "not_in",
                            "data": {},
                            "tag": "Content",
                            "value": ""
                        },
                        {
                            "name": "not_regex",
                            "data": {},
                            "tag": "Content",
                            "value": ""
                        },
                        {
                            "name": "nullable",
                            "data": {},
                            "tag": "Type",
                            "value": ""
                        },
                        {
                            "name": "numeric",
                            "data": {},
                            "tag": "Type",
                            "value": ""
                        },
                        {
                            "name": "password",
                            "data": {},
                            "tag": "WWW",
                            "value": ""
                        },
                        {
                            "name": "present",
                            "data": {},
                            "tag": "Other",
                            "value": ""
                        },
                        {
                            "name": "regex",
                            "data": {},
                            "tag": "Content",
                            "value": ""
                        },
                        {
                            "name": "required",
                            "data": {},
                            "tag": "Other",
                            "value": ""
                        },
                        {
                            "name": "required_if",
                            "data": {},
                            "tag": "Require",
                            "value": ""
                        },
                        {
                            "name": "required_unless",
                            "data": {},
                            "tag": "Require",
                            "value": ""
                        },
                        {
                            "name": "required_with",
                            "data": {},
                            "tag": "Require",
                            "value": ""
                        },
                        {
                            "name": "required_with_all",
                            "data": {},
                            "tag": "Require",
                            "value": ""
                        },
                        {
                            "name": "required_without",
                            "data": {},
                            "tag": "Require",
                            "value": ""
                        },
                        {
                            "name": "required_without_all",
                            "data": {},
                            "tag": "Require",
                            "value": ""
                        },
                        {
                            "name": "same",
                            "data": {},
                            "tag": "Field",
                            "value": ""
                        },
                        {
                            "name": "size",
                            "data": {},
                            "tag": "Size",
                            "value": ""
                        },
                        {
                            "name": "sometimes",
                            "data": {},
                            "tag": "Other",
                            "value": ""
                        },
                        {
                            "name": "starts_with",
                            "data": {},
                            "tag": "Content",
                            "value": ""
                        },
                        {
                            "name": "string",
                            "data": {},
                            "tag": "Type",
                            "value": ""
                        },
                        {
                            "name": "timezone",
                            "data": {},
                            "tag": "Date",
                            "value": ""
                        },
                        {
                            "name": "unique",
                            "data": {},
                            "tag": "Other",
                            "value": ""
                        },
                        {
                            "name": "url",
                            "data": {},
                            "tag": "WWW",
                            "value": ""
                        },
                        {
                            "name": "uuid",
                            "data": {},
                            "tag": "WWW",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "name": "ValidationUpdate",
                "original": false,
                "version": 1,
                "description": "",
                "propertyManager": {
                    "list": []
                }
            }
        ]
    }
}